rm(list=ls())

library(ggplot2)
library(foreign)
library(plyr)
library(lubridate)

# arguments from Rscript
args <- commandArgs(trailingOnly=TRUE)

# create output file locations
ifelse(!dir.exists("../../output/county_weighted_mean_summary"), dir.create("../../output/county_weighted_mean_summary"), FALSE)
ifelse(!dir.exists("../../output/county_weighted_mean_summary/county_daily"), dir.create("../../output/county_weighted_mean_summary/county_daily"), FALSE)
#ifelse(!dir.exists("../../output/county_weighted_mean_summary/county_monthly"), dir.create("../../output/county_weighted_mean_summary/county_monthly"), FALSE)

# load csv with ERA-Interim grid values
grid <- read.csv('../../data/lon_lat/global_lon_lat.csv')
grid <- grid[,c(2:3)]

# adjust grid lon values in table to go from -180 to 180
grid$lon <- grid$lon - 180

# objects with lon and lat values
lon <- sort(unique(grid$lon))
lat <- sort(unique(grid$lat))

# limits of lat and lon values
lon.lim <- c(min(lon),max(lon))
lat.lim <- c(min(lat),max(lat))

# establish how many rows and columns there are in grid file
grid.rows <- length(unique(grid$lon))
grid.cols <- length(unique(grid$lat))

# load real data
year <- as.numeric(args[1])
dname <- as.character(args[2])
freq <- as.character(args[3])
num <- as.character(args[4])
file.name <- paste0('~/data/climate/net_cdf/',dname,'/processed/','worldwide_',dname,'_',freq,'_',num,'_',year,'.rds')
grid.temp <- readRDS(file.name)

print(paste0('running county_weighted_mean_summary.R for ',year))

# load lookup tables for polygons grid points and lon lat
poly.lookup <- readRDS('../../output/grid_county_intersection/point_poly_lookup.rds')

# merge dummy temperature data with polygon ids
grid.temp <- merge(grid.temp,poly.lookup,by=c('lon','lat'),all.x=1)
grid.temp <- na.omit(grid.temp)

# load weighted mean lookup table
wm.lookup <- readRDS('../../output/grid_county_intersection/weighted_area_unproj_national.rds')

# for each county, summarise by day (for single year)
#dat.wm <- data.frame()
dat.long <- data.frame()
for(i in unique(wm.lookup$state.county.fips)){
    print(i)
    fips.match <- subset(wm.lookup,state.county.fips==i)
    fips.match <- merge(fips.match,grid.temp,by=c('point.id','poly.id'),all.x=1)
    weightings <- fips.match[ , grepl('weighted.area', names(fips.match) ) ]
    dat.days <- fips.match[ , grepl( year , names(fips.match) ) ]
    dat.days <- dat.days * weightings
    dat.days <- as.data.frame(colSums(dat.days))
    dat.days <- cbind(dat.days, as.data.frame(matrix(unlist(strsplit(rownames(dat.days),'-')), ncol=3, byrow=TRUE)))
    dat.days$state.county.fips <- i
    dat.long <- rbind(dat.long,dat.days)
    #summary <- ddply(dat.days,.(year,month),summarize,temp.weighted=mean(temperature))
    #summary$state.county.fips <- i
    #dat.wm <- rbind(dat.wm,summary)
}

# correct some variables
names(dat.long) <- c(dname,'year','month','day','state.county.fips')
rownames(dat.long) <- seq(1,nrow(dat.long))
dat.long$year <- as.numeric(as.character(dat.long$year))
dat.long$month <- as.numeric(as.character(dat.long$month))
dat.long$day <- as.numeric(as.character(dat.long$day))
#dat.wm$year <- as.numeric(as.character(dat.wm$year))
#dat.wm$month <- as.numeric(as.character(dat.wm$month))

# load weightings by county for state summary based on population
#state.weighting <- readRDS('~/data/climate/population_weightings/state_population_weightings.rds')

# filter for a year of interest
#year.selected <- year
#state.weighting.filter <- subset(state.weighting,year %in% year.selected)

#dat.temp <-merge(dat.wm,state.weighting.filter,by=c('year','month','state.county.fips'))
#temp.state <- ddply(dat.temp,.(year,month,state.fips,sex,age),summarize,temp.adj=sum(pop.weighted*temp.weighted))
#temp.state <- na.omit(temp.state)

# convert kelvin to degrees
#dat.long <- 
#temp.state$temp.cel <- temp.state$temp.adj- 273.15

# save output
ifelse(!dir.exists(paste0("../../output/county_weighted_mean_summary/county_daily/",dname)), dir.create(paste0("../../output/county_weighted_mean_summary/county_daily/",dname)), FALSE)
saveRDS(dat.long,paste0('../../output/county_weighted_mean_summary/county_daily/',dname,'/county_daily_',dname,'_',year.selected,'.rds'))
#saveRDS(dat.wm,paste0('../../output/county_weighted_mean_summary/county_monthly/county_monthly_',year.selected,'.rds'))
#saveRDS(temp.state,paste0('../../output/state_weighted_mean_summary/state_weighted_summary_',year.selected,'.rds'))
