rm(list=ls())

library(ggplot2)
library(foreign)
library(plyr)
library(lubridate)

# arguments from Rscript
args <- commandArgs(trailingOnly=TRUE)
year <- as.numeric(args[1])

ifelse(!dir.exists("../../output/metrics_development"), dir.create("../../output/metrics_development"), FALSE)

# for each county, load summary by day and then by month (for single year)
dat.county <- readRDS(paste0('../../output/state_weighted_mean_summary/county_daily_',year,'.rds'))

# fix temperature
dat.county$temperature <- dat.county$temperature - 273.15

# load weightings by county for state summary based on population
state.weighting <- readRDS('~/data/climate/population_weightings/state_population_weightings.rds')

# filter for a year of interest
year.selected <- year
state.weighting.filter <- subset(state.weighting,year %in% year.selected)

####################################################
# 1. AVERAGE TEMPERATURE
####################################################
var <- 'mean_temp'

# process for finding average temperature
dat.at <- dat.county
dat.at <- ddply(dat.at,.(year,month,state.county.fips),summarize,temp.weighted=mean(temperature))

# merge and create weighted mean for state
dat.temp <-merge(dat.at,state.weighting.filter,by=c('year','month','state.county.fips'))
temp.state <- ddply(dat.temp,.(year,month,state.fips,sex,age),summarize,temp.adj=sum(pop.weighted*temp.weighted))
temp.state <- na.omit(temp.state)

# save output
ifelse(!dir.exists("../../output/metrics_development/mean_temp"), dir.create("../../output/metrics_development/mean_temp"), FALSE)
saveRDS(temp.state,paste0('../../output/metrics_development/mean_temp/state_weighted_summary_',var,'_',year.selected,'.rds'))

####################################################
# 2. NUMBER OF DAYS ABOVE A THRESHOLD
####################################################
var <- 'days_above'
threshold.upper <- 30

# process for counting days below threshold
# do i need to make days above threshold as a proportion of number of days in month?
dat.th.up <- dat.county
dat.th.up$count <- ifelse(dat.th.up$temperature> threshold.upper, 1,0)
dat.th.up <- ddply(dat.th.up,.(year,month,state.county.fips),summarize,days.above.threshold=sum(count))

# merge and create weighted mean for state
dat.temp <-merge(dat.th.up,state.weighting.filter,by=c('year','month','state.county.fips'))
temp.state <- ddply(dat.temp,.(year,month,state.fips,sex,age),summarize,days.above.threshold=sum(pop.weighted*days.above.threshold))
temp.state <- na.omit(temp.state)

# round (is this right?)
temp.state$days.above.threshold <- round(temp.state$days.above.threshold)

# save output
ifelse(!dir.exists(paste0("../../output/metrics_development/",var,'_',threshold.upper)), dir.create(paste0("../../output/metrics_development/",var,'_',threshold.upper)), FALSE)
saveRDS(temp.state,paste0('../../output/metrics_development/",var,'_',threshold.upper,'_state_weighted_summary_',var,'_',threshold.upper,'_',year.selected,'.rds'))

####################################################
# 3. NUMBER OF DAYS BELOW A THRESHOLD
####################################################
var <- 'days_below'
threshold.lower <- 10

# process for counting days below threshold
# do i need to make days above threshold as a proportion of number of days in month?
dat.th.do <- dat.county
dat.th.do$count <- ifelse(dat.th.do$temperature< threshold.lower, 1,0)
dat.th.do <- ddply(dat.th.do,.(year,month,state.county.fips),summarize,days.below.threshold=sum(count))

# merge and create weighted mean for state
dat.temp <-merge(dat.th.do,state.weighting.filter,by=c('year','month','state.county.fips'))
temp.state <- ddply(dat.temp,.(year,month,state.fips,sex,age),summarize,days.below.threshold=sum(pop.weighted*days.below.threshold))
temp.state <- na.omit(temp.state)

# round (is this right?)
temp.state$days.below.threshold <- round(temp.state$days.below.threshold)

# save output
saveRDS(temp.state,paste0('../../output/state_weighted_mean_summary/state_weighted_summary_',var,'_',threshold.upper,'_',year.selected,'.rds'))





